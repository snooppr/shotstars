#! /usr/bin/env python3
# Copyright (c) 2024 <snoopproject@protonmail.com>

import datetime
import os
import requests
import shutil
import signal
import sys
import time
import webbrowser

from rich.console import Console
from rich.panel import Panel
from rich.progress import BarColumn, SpinnerColumn, TimeElapsedColumn, Progress
from rich.table import Table


console = Console()
Windows = True if sys.platform == 'win32' else False
Linux = True if Windows is False else False

console.print("""[yellow]
 ____  _           _     ____  _                 
/ ___|| |__   ___ | |_  / ___|| |_ __ _ _ __ ___ 
\___ \| '_ \ / _ \| __| \___ \| __/ _` | '__/ __|
 ___) | | | | (_) | |_   ___) | || (_| | |  \__ \\
|____/|_| |_|\___/ \__| |____/ \__\__,_|_|  |___/[/yellow]  v0.1, author: https://github.com/snooppr
""")

url_repo = input("Specify the repository url (Github): ")
repo = url_repo.rsplit(sep='/', maxsplit=1)[-1]
repo_api = '/'.join(url_repo.rsplit(sep='/', maxsplit=2)[-2:])

time_start = time.perf_counter()

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤.
if Windows:
    path = os.environ['LOCALAPPDATA'] + f"\\ShotStars\\results\\{repo}"
elif Linux:
    path = os.environ['HOME'] + f"/ShotStars/results/{repo}"
os.makedirs(path, exist_ok=True)


def win_exit():
    """—É–¥–µ—Ä–∂–∞–Ω–∏–µ –æ–∫–Ω–∞ –∫–æ–Ω—Å–æ–ª–∏ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ 'windows_shotstars.exe' –¥–ª—è OS Windows."""
    if Windows:
        input("\n'enter' –≤—ã—Ö–æ–¥")
        sys.exit()


def dif_time():
    """–î–∏–∞–ø–∞–∑–æ–Ω –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏: –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫ —Ç–µ–∫—É—â–µ–º—É —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é."""
    delta = datetime.datetime.today() - datetime.datetime.fromtimestamp(date_file_new)
    return f"{delta.days}d. {(datetime.datetime.utcfromtimestamp(0) + delta).strftime('%Hh. %Mm.')}"


def parsing(diff=False):
    """
    –¢–∞–∫ –∫–∞–∫ —Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ –æ–±—Ä–∞—â–∞—é—Ç—Å—è –∫ –æ–¥–Ω–æ–º—É —Ö–æ—Å—Ç—É,
    —Ç–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ,
    –Ω–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ TCP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (—É–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏).
    –í —Å–ª—É—á–∞–µ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–ª–∏ —Å–±–æ—è HTTPAdapter —Ä–µ–∞–ª–∏–∑—É–µ—Ç
    –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.
    """
    my_session = requests.Session()
    repeat = requests.adapters.HTTPAdapter(max_retries=4)
    my_session.mount('https://', repeat)
    head = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:123.0) Gecko/20100101 Firefox/121.0'}
    try:
        req = my_session.get(f'https://api.github.com/repos/{repo_api}', headers=head, timeout=6)
        r = req.json()
    except Exception:
        console.print('[bold red]Network error![/bold red]')
        win_exit()
        sys.exit()

# –†–∞—Å—á–µ—Ç –∫–æ–ª-–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –∏—Ç–µ—Ä–∞—Ü–∏–π.
# –í —Å–ª—É—á–∞–µ —Å–±–æ—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ 'X-RateLimit-Reset' –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ —Å–Ω—è—Ç–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π. 
    try:
        stars = int(r.get("stargazers_count"))
        pages = (stars // 100) + 1
    except Exception:
        console.print("\n[bold red]Attention! The API limit has probably been exceeded, the block will presumably be lifted:",
                      time.strftime('%Y-%m-%d_%H:%M', time.localtime(int(req.headers.get('X-RateLimit-Reset')) + 60)))
        console.print(Panel.fit("Limitations: ~limit 30 requests or 6000 stars/hour", title="Github API"))
        win_exit()
        sys.exit()

# –í—ã–≤–æ–¥ –Ω–∞ –ø–µ—á–∞—Ç—å –∑–≤–µ–∑–¥ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ (–µ—Å–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç).
    title_repo = "No repository description available" if r.get('description') is None else r.get('description')
    console.print(f"[green]\n{title_repo}\n[bold green]Github-rating::[/bold green] {stars} stars\n")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
    progress = Progress(TimeElapsedColumn(), SpinnerColumn(spinner_name='earth'),
                        "[progress.percentage]{task.percentage:>1.0f}%",
                        BarColumn(bar_width=None, complete_style='yellow', finished_style='cyan yellow'),
                        refresh_per_second=0.4, transient=True)

# –û–±—Ö–æ–¥ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö user's, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞–≤–∏–ª–∏ –∑–≤–µ–∑–¥—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é.
    lst_new = []
    with progress:
        task = progress.add_task("", total=pages)
        for page in range(1, pages+1):
            progress.update(task, advance=1)
            progress.refresh()
            try:
                r = my_session.get(f'https://api.github.com/repos/{repo_api}/stargazers?per_page=100&page={page}',
                                   headers=head, timeout=6).json()
                
                for num in r:
                    lst_new.append(num.get("login"))
            except Exception:
                console.print('\n[bold red]Crash!!')
                win_exit()
                sys.exit()    

    with open(f"{path}/new.txt", "w", encoding="utf-8") as f_w:
        print(*lst_new, file=f_w, sep="\n")

# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –≤ –Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π.
    if diff:
        with open(f"{path}/old.txt", "r") as f_r:
            lst_old = f_r.read().split()

        diff_lst_dn = list(set(lst_old) - set(lst_new)) # —É–±—ã–≤–∞–Ω–∏–µ –∑–≤–µ–∑–¥.
        diff_lst_up = list(set(lst_new) - set(lst_old)) # –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏–µ –∑–≤–µ–∑–¥.

        if bool(diff_lst_dn) is False:
            console.print("[bold black on white]gone stars not detected")
        if bool(diff_lst_up) is False:
            console.print("[bold black on white]ADDING stars not detected")

        if not any([bool(diff_lst_dn), bool(diff_lst_up)]):
            print('\nfinish', round(time.perf_counter() - time_start, 1), 'sec.') # –ø–µ—á–∞—Ç—å –≤—Ä–µ–º–µ–Ω–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞.
            win_exit()
            sys.exit()
        elif bool(diff_lst_dn) or bool(diff_lst_up):
            per_stars_dn = round(len(diff_lst_dn) * 100 / stars, 2) # —Ä–∞—Å—á–µ—Ç % —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –ø–æ—Ç–µ—Ä—å –∑–≤–µ–∑–¥ –∫ –æ–±—â–µ–º—É —Ä–µ–π—Ç–∏–Ω–≥—É. 
            per_stars_up = round(len(diff_lst_up) * 100 / stars, 2) # —Ä–∞—Å—á–µ—Ç % —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏—è –∑–≤–µ–∑–¥ –∫ –æ–±—â–µ–º—É —Ä–µ–π—Ç–∏–Ω–≥—É. 

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–±–ª–∏—Ü –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ –ø–µ—á–∞—Ç—å –≤ CLI.
            table_dn = Table(title=f"\n[yellow]Gone stars (-{per_stars_dn}%)\nin the last: {dif_time()}[/yellow]",
                             title_justify="center", header_style='yellow', style="yellow")
            table_dn.row_styles = ["none", "dim"]
            table_dn.add_column("N", justify="left", style="yellow", no_wrap=True)
            table_dn.add_column("gone stars", justify="left", style="yellow", no_wrap=True)

            table_up = Table(title=f"\n[cyan]New stars (+{per_stars_up}%)\nin the last: {dif_time()}[/cyan]",
                             title_justify="center", header_style='cyan', style="cyan")
            table_up.row_styles = ["none", "dim"]
            table_up.add_column("N", justify="left", style="cyan", no_wrap=True)
            table_up.add_column("new stars", justify="left", style="cyan", no_wrap=True)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–æ—Ç–∫—Ä—ã—Ç–∏–µ HTML-–æ—Ç—á–µ—Ç–∞/–ø–µ—á–∞—Ç—å CLI-—Ç–∞–±–ª–∏—Ü —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏, –µ—Å–ª–∏ —Ç–∞–∫–∏–µ –∏–º–µ—é—Ç—Å—è.
            with open(f"{path}/report.html", "w", encoding="utf-8") as file_html:
                file_html.write(f"<!DOCTYPE html>\n<html lang='en'>\n\n<head>\n<title>üí´({repo}) HTML-reeport</title>\n" + \
                                "<meta charset='utf-8'>\n<style>\n.textcols {white-space: nowrap}\n" + \
                                ".textcols-item {white-space: normal; display: inline-block; width: 48%; " + \
                                "vertical-align: top; background: #fff2e1}\n" + \
                                ".textcols .textcols-item:first-child {margin-right: 4%}\n" + \
                                ".pic {float: right}\n.shad{display: inline-block}\n" + \
                                ".shad:hover{text-shadow: 0px 0px 14px #6495ED; transform: scale(1.1);\n" + \
                                "transition: transform 0.15s}\n</style>\n</head>\n\n<body>\n" + \
                                f"<h2 align='center' style='text-shadow: 0px 0px 13px #84d2ca' >{url_repo}</h2>\n" + \
                                "<div class='textcols'>\n<div class='textcols-item'>\n" + \
                                f"<h4 style='color:#CC3333'>üí´ Gone stars (-{per_stars_dn}%):</h4>\n")

                if bool(diff_lst_dn):
                    file_html.write("<ol>")
                    for N, username in enumerate(diff_lst_dn, 1):
                        table_dn.add_row(f"{N}.", f'https://github.com/{username}')
                        file_html.write(f"\n<li><span class='shad'><a target='_blank' " + \
                                        f"href='https://github.com/{username}'>{username}</a></span></li>")
                    file_html.write("\n</ol>\n")

                file_html.write(f"</div>\n\n<div class='textcols-item'>\n<h4 style='color:#32CD32'>" + \
                                f"üåü New stars (+{per_stars_up}%):</h4>\n")

                if bool(diff_lst_up):
                    file_html.write("<ol>")
                    for N, username in enumerate(diff_lst_up, 1):
                        table_up.add_row(f"{N}.", f'https://github.com/{username}')
                        file_html.write(f"\n<li><span class='shad'><a target='_blank' " + \
                                        f"href='https://github.com/{username}'>{username}</a></span></li>")
                    file_html.write("\n</ol>\n")

                file_html.write("</div>\n</div>\n\n<br>\n<a href='" + \
                                "https://github.com/snooppr/shotstars/tree/main' target='blank'><img src=" + \
                                "https://raw.githubusercontent.com/snooppr/shotstars/main/images/stars.jpg " + \
                                "alt='The program was written for an article competition' width='600' class='pic'></a>\n\n")
                file_html.write("<span style='color:gray; text-shadow: 0px 0px 20px #333333'>" + \
                                "<small><small>‚ï≠üìÖ Changes over the past " + \
                                f"({dif_time()}): <br>‚îú‚îÄ‚îÄ{date}<br>‚îî‚îÄ‚îÄ{time.strftime('%Y-%m-%d_%H:%M', time.localtime())}" + \
                                "</small></small></span>\n\n<p style='color: gray'><small><small>" + \
                                "Software developed for a competition<br>¬©Author: <a href='https://github.com/snooppr' " + \
                                "target='blank'><img align='center' src='https://github.githubassets.com/favicons/favicon.svg' " + \
                                "alt='' height='30' width='30'/>ü™ô</a><a href='https://yoomoney.ru/to/4100111364257544' " + \
                                "target='blank' title='Was the program useful? Support the developer financially.'>donate" + \
                                "</a></small></small></p>\n\n</body>\n</html>")

            if bool(diff_lst_dn):
                console.print(table_dn)
            if bool(diff_lst_up):
                console.print(table_up)

            webbrowser.open(f"file://{path}/report.html")


    print('\nfinish', round(time.perf_counter() - time_start, 1), 'sec.')

    win_exit()

# –†–∞–∑–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞ url. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ –ø—Ä–æ—à–ª—ã—Ö —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–µ–ø–æ –≤ –ë–î.
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è 'ctrl + c' —Å–∫—Ä–∏–ø—Ç–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–Ω—ã—Ö OS. –í—ã–∑–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ 'parsing()'.
if __name__ == '__main__':
    try:
        if len(url_repo) == 0:
            console.print("[bold red]'enter' -> exit")
        elif len(url_repo) < 18 or 'github.com' not in url_repo:
            console.print("[bold red]Incorrect repository link provided")
            shutil.rmtree(path, ignore_errors=True)
            win_exit()
        elif os.path.exists(f"{path}/new.txt"):
            date_file_new = os.path.getmtime(f"{path}/new.txt")
            date = time.strftime('%Y-%m-%d_%H:%M', time.localtime(date_file_new))
            console.print(f"\nRepository '{repo}' was last checked ->  {date}")
            a = shutil.copy(f"{path}/new.txt", f"{path}/old.txt")
            parsing(diff=True)
        else:
            console.print(f"\n[bold green]A new repository has been added to the tracking database: '{repo}'.\n" + \
                          "On subsequent/re-scanning of the repository, 'ShotStars' will attempt to calculate stars.")
            parsing()
    except KeyboardInterrupt:
        console.print(f"\n[bold red]Interrupt [italic][/bold red]")
        if Windows:
            os.kill(os.getpid(), signal.SIGBREAK)
        if Linux:
            os.kill(os.getpid(), signal.SIGKILL)
